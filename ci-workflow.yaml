apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: deploy-fruits-service-
spec:
  entrypoint: ci-example
  volumeClaimTemplates:
    - metadata:
        name: workdir
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Mi
  templates:
  - name: ci-example
    steps:
      - - name: run-tests
          template: test
  - name: test
    container:
      image: 'golang:latest'
      command: [sh,-c]
      workingDir: /go/src/github.com/viggin543/golang_service
      args: ["cp -R resources /mnt/vol ;sleep 60; go mod download; go test ./..."]
      volumeMounts:
        - name: workdir
          mountPath: /mnt/vol
      env:
      - name: DB_HOST
        value: "127.0.0.1"
    sidecars:
      - name: mysql
        image: mysql:5.7
        ports:
          - containerPort: 3306
        env:
        - name: MYSQL_USER
          value: root
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: frutas
      - name: flyway
        image: boxfuse/flyway:latest-alpine
        command: [sh,-c]
        args: ['
        sleep 40;cp -R /mnt/vol/resources/db/migration/* /flyway/sql; flyway migrate -url=jdbc:mysql://127.0.0.1:3306/frutas?createDatabaseIfNotExist=true -schemas=frutas -user=root -password=password
         ']
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
    inputs:
      artifacts:
        - git: { repo: 'https://github.com/viggin543/golang_service.git', revision: '36ffd2c'}
          name: code
          path: /go/src/github.com/viggin543/golang_service

